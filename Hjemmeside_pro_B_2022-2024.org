#+title: Programmering B 2022 - 2024
#+subtitle: Vibenshus Gymnasium
#+author: Jacob Debel
#+date: 2022-2024
#+options: toc:t num:nil tags:t timestamp:nil ^:{}
# #+setupfile: https://fniessen.github.io/org-html-themes/org/theme-bigblow.setup
# #+setupfile: ./org-html-themes/org/theme-bigblow-local.setup
#+setupfile: ./theme-bigblow-local.setup

* Lektionsbeskrivelser
** Uge 34
*** [2023-08-23 ons]                                          :GUI:PySide6:
I dag ser vi nærmere på udviklingen af et kryds og bolle-spil. Vi skal se på opbygning af projektet vha. *M*​odel *V*​iew *C*​ontroller.

Her er et billede, som kort viser princippet.

#+attr_html: :width 500px
[[./img/ModelViewController.png]]

Ellers kan/skal I læse mere om princippet [[https://openclassrooms.com/en/courses/6900866-write-maintainable-python-code/7009312-structure-an-application-with-the-mvc-design-pattern][her]].

Vi skal diskutere, hvilket indhold, der skal være i hhv model, view og controller.

- Hvad skal skal modellen indeholde?
- Hvad skal skal viewet indeholde (og hvilken fil er der tale om)?
- Hvad skal skal controlleren indeholde?


*** [2023-08-21 man]                                          :GUI:PySide6:
Jeg hjælper dem, som endnu ikke har en fungerende røversprogsoversætter (bare fra dansk til røversprog).

Alle skal sørge for at pushe deres seneste udgaver af røversprogsoversætteren til github i løbet af i dag.

I andre, I skal gå i gang med at udvikle et kryds og bolle-spil. Se opgaven her:

[[https://classroom.github.com/a/-ALtxQRV]]

** Uge 33
*** [2023-08-17 tor]                                          :GUI:PySide6:
Vi arbejder videre med røversprogsoversætteren. Nedenfor kan I se, hvad vi skrev på tavlen sidst. Husk de tre tests under jeres udvikling.

#+attr_html: :width 600px
[[./img/roeversprog_fra_tavlen.jpg][file:./img/roeversprog_fra_tavlen.jpg]]

*** [2023-08-16 ons]                                          :GUI:PySide6:
Her er en guide til dem af jer, som slet ikke er startet på projektet (eller bare vil starte forfra) om den grafiske røversprogsoversætter.

1. Følg dette link til opgaven, som ligger på githus classroom: [[https://classroom.github.com/a/JZaGWWDx]]
2. Accepter opgaven og gå til jeres nye repository (hvis I ikke allerede har det).
3. På jeres git repository skal I nu trykke på den grønne knap =Code= oppe til højre og *kopiere* det lange link.
4. Find nu jeres stifinder (der hvor I kan åbne mapper og trykke på filer for at åbne dem) og navigér hen til en mappe, *hvor I gerne vil have jeres git repository klonet hen til*. Det vil typisk være i en mappe med skoleting og programmering.
5. Højreklik nu et sted i selve mappen (altså ikke på en fil i mappen) og vælg =git bash here= (eller noget der ligner). En bash-terminal skulle gerne åbne op, hvor I er placeret i den rette mappe.
6. I *git bash-terminalen* skal I nu skrive =git clone https://url.til.gitrepo=. (URL'en skal I selvfølgelig erstatte med den eksakte sti til jeres git repository). Man kan kopiere ind i git bash ved at højreklikke og vælge =paste=.
7. Nu skal I åbne *Pycharm*. Når programmet er oppe at køre, skal I lukke jeres nuværende projekt (File -> Close Project). Pycharm lukker nærmet helt ned og tilbage er blot et nyt lille vindue.
8. I det nye lille vindue trykker I på *New Project*.
   - Under *Location* skal I vælge den mappe, hvor I klonede jeres git repository tidligere. I kan finde mappen ved at trykke på mappeikonet i højre side.
   - *Python Interpreter* skal I vælge *New environment using* og så vælge *Virtuelenv*.
   - *Location* (for interpreteren) skal gerne være en mappe som hedder =venv= i samme mappe som projektet.
   - *Base interpreter* er nok valgt til at være den pythoninstallation, I installerede til at starte med.
   - *Slå fluebenet fra for "Create a main.py welcome script"*
   - Tryk til sidst på *Create* nede til højre.
9. Når pycharm spørger om, I vil benytte de allerede eksisterende filer i projektet, som skal I bare sige ja til dette.
10. Endelig er jeres opgave (næsten) klar til brug. I mangler blot at installere =pyside6= i jeres virtuelle miljø. Dette gøres på følgende måde:
    - Tryk på =File -> Settings=.
    - Tryk på =Project: Projektnavn= ude til venstre.
    - Tryk på =Python Interpreter=.
    - Tryk nu på plusikonet, og søg efter =pyside6=.
    - Installer =pyside6= ved at trykke på =Install Package= nederst til venstre, når I har markeret =pyside6= i listen.
11. Tjek nu endelig at I har adgang til at bruge QtDesigner. Dette gør I ved at:
    - trykke på fanen =Terminal= allernederst i Pycharm
    - og så skrive =pyside6-designer.exe= i terminalen og så trykke enter.
    
      Alternativt kan I skrive =start /B pyside6-designer.exe=, men jeg sidder ikke lige foran en windowscomputer, så kan ikke lige teste det.
*** [2023-08-14 man]                                          :GUI:PySide6:
Velkommen tilbage fra en velfortjent sommeferie.
Nu er I nået i 3.g, og I mangler kun lige det sidste år, for at blive studenter.
Inden da skal vi dog lige have styr på en helt masse programmering. :)

Jeg kunne godt tænke mig, at lave lidt om på emnerne, som vi skal arbejde med i år.
Jeg er nemlig være ud som censor, og er ved at opbygge et samarbejde med et andet programmeringshold i Odense.
Planen er, at I og dem skal samarbejde en smule. Det kan jeg fortælle mere om.

Ellers skal vi lige have styr på hængepartierne fra sidste år. Alle skal lige have udarbejdet et
grafisk andengradsligningsløser, hvor designet er udført vha. =QtDesigner=. Find jeres tidligere arbejde frem fra gemmerne vha =git=.
** 2.g
*** Uge 23                                                   :Prøveeksamen:
Vi afholder prøveeksaminerne tirsdag og onsdag. Hold øje med skolen IT-platform (lectio).
*** Uge 21                                                   :Prøveeksamen:
Vi afholder spørgetime til den kommende *mundtlige* årsprøve i programmering B *torsdag d. 25. maj kl 09:00 til 10:30*.

Her vil jeg fortælle nærmere om selve prøven. Der er 30 minutters forberedelse og 15 minutters eksamination. Spørgsmålene er *ukendte*, men til gengæld må I anvende alle hjælpemidler *inklusiv internet*.
*** Uge 18 + 19                                               :GUI:PySide6:
Vi arbejder videre med udvikling af grafiske brugerflader til vores røverssprogsoversætter.
*** Uge 17                                                    :GUI:PySide6:
Tænk at vi sidst så hinanden i uge 12. Det er ikke sådan, når der kommer Eramus+-projekter, påskeferie, covid og værkstedsuger i vejen for undervisningen.
Vi må hellere forsøge at komme tilbage på sporet igen.

Jeg er spændt på at se, hvor langt I er kommet med røversprogsoversætteren, hvis I overhovedet er kommet i gang. Det er i hvert fald det projekt, vi arbejder med i denne uges ene lektion.
*** Uge 13                                                    :GUI:PySide6:
I denne uge er jeg fuldt booket med undervisning ifm Erasmus+-projektet Qute, hvor vi har gæster fra Holland og Østrig. Derfor skal I arbejde selvstændigt med at udvikle en grafisk *røversprogsoversætter*. I kan finde opgaven her: [[https://classroom.github.com/a/JZaGWWDx]]

Husk at jeg kan følge med i, om I for det første acceptere opgaven og hvordan jeres commits ser ud. Der bliver holdt øje med jer. :)
*** Uge 12                                                    :GUI:PySide6:
:PROPERTIES:
:VISIBILITY: folded
:END:
I denne uge blev der arbejdet med at udvikle en grafisk andengradsligningsløser. Opgaven ses her: [[https://classroom.github.com/a/R8wEwYRL]]
*** Uge 11                                                    :GUI:PySide6:
:PROPERTIES:
:VISIBILITY: folded
:END:
Efter mange måneders introduktion til programmering vha =arcade=-biblioteket bevæger vi os over i udvikling af grafiske brugerflader (GUIs, på engelsk Graphical User Interfaces). Vi kommer til at anvende biblioteket =PySide6=, som er python /bindings/ til =C++=-biblioteket =Qt6=. =Qt= udtales for øvrigt /cute/.

Se præsentationerne her: [[https://github.com/Vibenshus-Gymnasium-Programmering/PySide6_praesentationer]]

Mens diverse opgaver kan findes på github classroom: [[https://classroom.github.com/classrooms/108457464-vibenshus-gymnasium-programmering-b-2022-2024]]
*** Uge 5,6,8 og 9                      :OOP:Arkanoid:selvstændigt_arbejde:
:PROPERTIES:
:VISIBILITY: folded
:END:
I disse fire uger er der blevet arbejdet selvstændigt med arkanoidopgaven.
*** Uge 4                               :OOP:Arkanoid:selvstændigt_arbejde:
:PROPERTIES:
:VISIBILITY: folded
:END:
I denne uges tre lektioner (onsdag morgen og fredag eftermiddag) skal I arbejde med den sidste nye programmeringsopgave til jer. I skal udvikle jeres egne versioner af arkanoidkloner. Jeg har udviklet en skabelon, som I skal tage udgangspunkt i. Find jeres opgaver i det tilhørende git-repo: [[https://classroom.github.com/a/tglECt4n]].

Onsdag er jeg ude som SOP-censor hele dagen, mens jeg skal på hospitalet med min datter fredag. Derfor skal I selv starte op på arbejdet med opgaven. Alt, hvad I har brug, står i opgavens readme-fil. God arbejdslyst!

*UPDATE*: Jeg kan se, at det langt fra er alle, som har klonet deres git-repo. Derfor bliver der fredag ført fravær på baggrund af jeres git-historik. *I skal derfor sørge for at pushe jeres arbejde med opgaven tilbage til jeres git-repo, når I er færdige med dagens arbejde.* Jeg kan se både, hvilken kode I har skrevet, og hvornår I pusher koden til jeres git-repos.

*** Uge 3
:PROPERTIES:
:VISIBILITY: folded
:END:
- Ingen undervisning, da jeg har været på Erasmusplus-tur til Holland hele ugen.
*** Uge 2                                                             :OOP:
:PROPERTIES:
:VISIBILITY: folded
:END:
- Lidt mere arbejde med PONG og forståelse af klasser.
*** Uge 1
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2023-01-06 fre]                                                 :OOP:
Videre arbejde med PONG-spil.

**** [2023-01-04 ons]                                                 :OOP:
Opstart på udvikling af prototype til et PONG-spil. Se

[[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/10_OOP/10_OOP.org][10_OOP.org]]

*** Uge 50
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-12-16 fre]                                                 :OOP:
I dag står den på introduktion til ObjektOrienteret Programmering (OOP). I har allerede arbejdet lidt med det i SRC'en, men går vi lidt mere i dybden i selve progarmmeringsundervisningen. Præsentationen er stadig WIP (Work In Progress), men I kan finde den her:

[[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/10_OOP/10_OOP.org][10_OOP.org]]

**** [2022-12-14 ons]                                           :datatyper:
En lektion med datatyper. Vi arbejdede med Cæsarkryptering ved hjælp af UTF-8-tabellen.
*** Uge 49           
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-12-09 fre]                                           :datatyper:
I dag stod den på mere leg med datatyper, med særligt fokus på strenge og hvordan man i nogle tilfælde kan betragte strenge som lister af karakterer.
Endelig blev I introduceret til /røversprog/ og vi udviklede en røversprogsgenerator.

**** [2022-12-07 ons]                                           :datatyper:
I dag skal vi se lidt nærmere på de datatyper, vi har anvendt indtil videre i programmering, og der ud over skal vi arbejde særligt med lister og strenge.

I kan finde den tilhørende præsentation her:

[[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/09_Datatyper/09_Datatyper.org][09_Datatyper.org]]

*** Uge 47 + 48                            :src:animation:vektorfunktioner:
:PROPERTIES:
:VISIBILITY: folded
:END:
- I den første uge blev der undervist i animation af vektorfunktioner vha arcade-bibliotektet.
- I den anden uge var der skrivedage ifm SRC'en.
*** Uge 46
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-11-18 fre]                                              :løkker:
- Arbejde med afleveringsopgaven om løkker på github classroom.
**** [2022-11-16 ons]                                              :løkker:
Vi skal lige have færdiggjort den sidste opgave omkring konvertering fra binære tal til titalsystemet.

Efterfølgende er der en afleveringsopgave på github classroom omkring løkker.
Den kan I finde her: [[https://classroom.github.com/a/ToTBNP1k]]
*** Uge 45
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-11-11 fre]                                              :løkker:
- I dag skal vi blive færdige med introduktionen til while-løkker.
- Efterfølgende er der to forståelsesopgaver.
- Hovedparten af dagens undervisning kommer til at foregå ved, at I skal skrive programmer, som kan konvertere fra almindelige tal i basis ti, til binære tal, og tilbage igen.
  Derfor vil I få en introduktion til binære tal først. Der står mere om det i præsentationen om løkker.
**** [2022-11-09 ons]                                              :løkker:
Vi arbejdede med forståelsesopgaver og lidt med while-løkker.
**** [2022-11-07 man]                                              :løkker:
I dag står den på introduktion til løkker, for og while.

I kan finde præsentationen her:
[[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/08_loekker/08_loekker.org][08_loekker.org]]

*** Uge 43
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-10-24 man]
I dag arbejder vi/I videre med jeres spil med afsæt i opgaven "Flugten på Dune".
*** Uge 41
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-10-13 tor]                         :løkker:random:if_statements:
I dag bliver I nødt til at få analyseret kode i gæt et tal, og så udarbejdet et tilsvarende rutediagram i ~plantuml~.

Efterfølgende skal I arbejde med den næste aflevering, som hedder "Flugten på Dune". Find afleveringen på github classroom: [[https://classroom.github.com/a/ol5aRD7M]]
**** [2022-10-10 man]                                     :random:plantuml:
Vi starter lektionen med lige at se et eksempel på en 2.gradsligningsløser. Derefter vil I blive introduceret til konceptet tilfældige tal (random numbers). Dette er der selvfølgelig en præsentation til.

Find præsentationen her: [[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/07_tilfaeldige_tal/07_tilfaeldige_tal.org][07_Tilfaeldige_tal.org]]
*** Uge 40                                            :if_statements:input:
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-10-03 man]
I denne uge er der kun en lektion med programmering. I [[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/06_Betinget_udfoerelse/06_Betinget_udfoerelse.org][præsentationen om betinget udførelse]] er der en opgave, som går ud på at programmere en 2.gradsligningsløser vha af input fra brugeren og anvendelse af if-statements. Den opgave skal I arbejde med i dag.
*** Uge 39
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-09-29 tor]                  :if_statements:rutediagram:plantuml:
I dag skal vi arbejde med betinget udførelse i programmering. Det går også under navnet if statements.

I kan finde præsentationen her: [[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/06_Betinget_udfoerelse/06_Betinget_udfoerelse.org][06_Betinget_udfoerelse.org]].

**** [2022-09-26 man]                                   :arcade:funktioner:
Vi fortsætter vores arbejde med at omdanne gamle programmer til at tegne billeder vha funktioner.
*Alle* skal pushe deres arbejde til deres gitrepo, inden lektionen er slut.

Nogle enkelte af jer har endnu ikke accepteret opgaven i github classroom. Find opgaven her: [[https://classroom.github.com/a/uem17Egi]].
*** Uge 38
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-09-19 man] og [2022-09-22 tor]               :arcade:funktioner:
I ugens lektioner skal der arbejdes med at refaktorisere den gamle kode til at tegne billeder vha ~arcade~ til at anvende funktioner.
Selve opgaven kan findes på github classroom [[https://classroom.github.com/a/uem17Egi]].
*** Uge 37
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-09-15 tor]                                   :arcade:funktioner:
I dag har vi arbejdet videre med præsentationen [[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/04_Funktioner/04_Funktioner.org][04_Funktioner.org]] samt set en meget kort gennemgang af præsentationen [[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/05_Tegn_med_funktioner/05_Tegn_med_funktioner.org][05_Tegn_med_funktioner.org]].
**** [2022-09-12 man]                                   :arcade:funktioner:
I dagens ene lektion skal vi se på, hvordan man *selv* kan konstruere funktioner.
I kan finde præsentationen her:

[[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/04_Funktioner/04_Funktioner.org][04_Funktioner.org]]

*** Uge 36
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-09-08 tor]                          :arcade:funktioner:variable:
I dag skal vi have lidt mere teori omkring variable og definition af egne funktioner.

Vi har følgende 3 præsentationer til gode
- [[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/03_Variable/03_Variable.org][03_Variable.org]]
- [[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/04_Funktioner/04_Funktioner.org][04_Funktioner.org]]
- [[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/05_Tegn_med_funktioner/05_Tegn_med_funktioner.org][05_Tegn_med_funktioner.org]]

Samt denne opgave på github classroom
- [[https://classroom.github.com/a/uem17Egi]]

**** [2022-09-05 man]                                   :arcade:funktioner:
Dagens ene lektion bruges på at færdiggøre sit billede i arcade. *Alle* skal have gemt sit arbejde i github gennem github classroom, inden lektionen er omme.

- Hvis man ikke allerede har fundet ud af at anvende ~git~ gennem ~pycharm~, så er det også i dag, at det skal sættes op. Det gør livet noget nemmere for den fremtidige programmør. :)

- Hvis man allerede har gemt et billede på github, så skal der tilføjes en ekstra detalje i dag. Dette skal gøres ved
  - først at oprette en ny /feature/ branch i git.
  - checke den nye branch ud.
  - arbejde med sin nye detalje mens der committes til den nye branch.
  - Når den nye detalje endelig er helt på plads, checkes main branchen ud.
  - I main branchen ~merges~ feature branchen, som det sidste.
*** Uge 35
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-09-01 tor]                                   :arcade:funktioner:
I dag skal vi lige se præsentationen færdig omkring brugen af ~arcade~. Efterfølgende skal I arbejde med opgaven omkring tegning af et billede vha primitive geometriske figurer. Opgaven ligger på github classroom. Se linket fra sidste lektion.

**** [2022-08-29 man]                                   :arcade:funktioner:
I dag skal I til at anvende biblioteket =arcade=. Vi skal bruge det til at tegne billeder vha geometriske figurer.

- Hvis I vil forberede jer inden, så læs her: [[https://learn.arcade.academy/en/latest/chapters/05_drawing/drawing.html]]

- Jeg vil gennemgå følgende præsentation, som I kan følge med i på github: [[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/02_Tegn_med_arcade/02_Tegn_med_arcade.org]]

- I skal arbejde med følgende opgave på github (classroom): [[https://classroom.github.com/a/-LD3l093]]

*** Uge 34
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-08-25 tor]                                               :print:
Så går vi for alvor i gang med selve programmeringen. I dag skal vi se på de allerførste simple programstumper i =python=.

- Hvis I vil forberede jer hjemmefra, så skal I læse indholdet/se videoerne på dette link: [[https://learn.arcade.academy/en/latest/chapters/04_print_statement/print_statement.html]]

- Jeg vil gennemgå følgende "præsentation" i undervisningstiden (Det er et destillat af lektien): [[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer/blob/main/01_printfunktionen/01_printfunktionen.org]]

- I kan finde alle præsentationer til vores forløb med =arcade=​-biblioteket her: [[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer]]

- Endelig kommer I til at skulle arbejde med og aflevere følgende opgave på git classroom: [[https://classroom.github.com/a/_g8EyUgY]]

**** [2022-08-22 man]                                                 :git:
I dag skal der ryddes op i jeres logbøger. Måden, I skal gøre det på, er som følger:
- Opret en ny gren (branch). Den kan f.eks. hedder oprydning.
  - Ryd op i de filer, I gerne vil beholde, mens I sletter dem, som I ikke har brug for længere.
  - Det kunne f.eks. være én logbogsfil og en fil med en oversigt over, hvordan man skriver markdown- eller org mode-filer.
  - Indholdet i jeres logbog skal indeholde et afsnit over de mest anvendelige gitkommandoer og en beskrivelse af, hvordan git skal bruges.
  - Der skal også indsættes links til hjemmesider, hvor I kan læse mere om brugen af git.
- Husk at committe en eller flere gange i jeres nye gren.
- Når I er tilfredse med jeres oprydningsgren, skal I merge eller rebase indholdet til jeres main-gren.
*** Uge 33
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-08-18 tor]                                                 :git:
Jeg kan se, at stort set alle har fået committet en ændring i deres logbog, og pushet den til github. Godt arbejde!

I dag skal vi se nærmere på, hvad git ellers kan. Til formålet anvender vi [[https://learngitbranching.js.org/]].

Når I rigtig skal bruge git til jeres udvikling af programmer. Foreslår jeg, at I anvender [[https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow][Git Feature Branch workflow]], når I arbejder alene, og [[https://docs.github.com/en/get-started/quickstart/github-flow][github flow]] når I skal til at arbejde sammen i grupper. Begge workflows går ud på at skabe nye grene (branches), og så udvikle nye features i dem. Når en feature er færdig, checker man main-grenen ud og merger med featurebranchen. Alternativt kan man, mens man står i sin featurebranch *rebase* med main, når featuren er færdig. *Dette øver vi os på med logbogen.*

I logbogen skal I som minimum skrive de kommandoer ned, som skal bruges, når man arbejder med git feature branch workflow. Altså beskriv arbejdsgangen.

**** [2022-08-15 man]                                                 :git:
Sidste gang gik der meget tid med download og opsætning af programmer.

*Dagens program er:*
- Alle skal have downloadet deres *logbog* fra deres tilhørende =git=-repo.
- Alle skal have læst README-filen og de tilhørende logbogsfiler (.md og .org)
- Alle skal have skrevet nogle noter i deres logbog, hvor der anvendes markdown- eller org mode-notation.
- Noterne skal som minimum beskrive, hvilke kommandoer der skal køres for at =committe=, og =pushe= ændringer.
- Alle skal glemme deres logbog ved at =committe= ændringerne.
- Alle skal have =pushet= deres logbøger til deres =git=-repos.

*** Uge 32
:PROPERTIES:
:VISIBILITY: folded
:END:
**** [2022-08-11 tor]                                               :intro:

*Dagens lektie*

Alle skal gerne have installeret =git=, =python= og en editor/et IDE (vælg pycharm, hvis I er i tvivl. [[https://vibenshus-gymnasium-programmering.github.io/Introduktion/][Se præsentationen fra sidste gang]] for en vejledning til installation af programmerne.)

*Dagens program*

Vi skal i dag arbejde med brugen af =git= og vi tager udgangspunkt i præsentationen om netop =git= [[https://vibenshus-gymnasium-programmering.github.io/Git_praesentation/][her]]. I kan også finde linket til præsentationen under fanen Præsentationer her på siden.


**** [2022-08-08 man]                                               :intro:
I dag står den på introduktion til faget programmering B. I kan finde den tilhørende præsentationer under fanen Præsentationer her på siden.

Efter selve introduktionen til faget går vi så småt i gang med at installere det programmel (det danske ord for software), som vi skal bruge.

[[https://vibenshus-gymnasium-programmering.github.io/Introduktion/]]

*Post Scriptum*
Så er vi ligesom i gang. Det var dejligt at lære jer at kende. Det skal nok blive et rigtig godt år!
* Præsentationer
** GUIs - Pyside6
Her er et link til præsentationerne omkring udvikling af grafiske brugerflader vha =PySide6=.

[[https://github.com/Vibenshus-Gymnasium-Programmering/PySide6_praesentationer]]

** SRC - Vektorfunktioner i matematik og programmering
Her er et link til præsentationen omkring vektorfunktioner og hvordan man kan animere dem i python ved hjælp af biblioteket =arcade=, som I kender allerede.

[[https://vibenshus-gymnasium-programmering.github.io/SRC_vektorfunktioner_i_matematik_og_programmering/]]
** Arcade

Her er et link til alle præsentationerne anvendt i forløbet omkring =arcade=​-bibliotektet.

[[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_praesentationer]]

Hver præsentation er blot en =org mode=-fil, som vil blive fremvist i emacs. Fidusen ved dette er, at kodestumperne kan eksekveres direkte fra emacs, og der kan ændres i koden direkte, uden at skulle åbne et andet program.

** Git

Her er præsentationen til opsætning af og opgaverne om ~git~.

[[https://vibenshus-gymnasium-programmering.github.io/Git_praesentation/]]

** Introduktion til faget

Her er præsentationen til faget. Åbn linket i en anden tab/et andet vindue.

[[https://vibenshus-gymnasium-programmering.github.io/Introduktion/]]

* Opgaver
** PySide6
*** Opgave 03 Kryds og bolle
Her er linket til opgaven om at udvikle kryds og bolle vha =PySide6=.
I denne omgang der er ingen skabeloner, så I skal selv anvende tidligere viden til at opbygge jeres projekt.

[[https://classroom.github.com/a/-ALtxQRV]]

Skabelon til censor:
[[https://github.com/Vibenshus-Gymnasium-Programmering/PySide6_Kryds_og_bolle]]

*** Opgave 02 Røversprogsoversætter
Her er linket til opgaven om at udvikle en grafisk brugerflade til en *røversprogsoversætter*.

[[https://classroom.github.com/a/JZaGWWDx]]

Skabelon til censor:
[[https://github.com/Vibenshus-Gymnasium-Programmering/roeversprogsoversaetter.git]]

*** Opgave 01 Grafisk andengradsligningsløser
Her er linket til jeres opgave med at udvikle en grafisk brugerflade til en andengradsligningsløser.

[[https://classroom.github.com/a/R8wEwYRL]]

Skabelon til censor:
[[https://github.com/Vibenshus-Gymnasium-Programmering/PySide6_andengradsligningsloeser.git]]
** Arcade
*** Opgave 06 Arkanoid
Her er linket til jeres opgave omkring udviklingen af en Arkanoid-klon.

[[https://classroom.github.com/a/tglECt4n]]

Skabelon til censor:
[[https://github.com/Vibenshus-Gymnasium-Programmering/Opgave_06_Arkanoid.git]]
*** Opgave 05 Tegn med løkker
Her er linket til jeres opgave omkring anvendelse af for-løkker.

[[https://classroom.github.com/a/ToTBNP1k]]

Skabelon til censor:
[[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_Opgave_5_Tegn_med_loekker.git]]
*** Opgave 04 Flugten på Dune
Her er linket til jeres første spilopgave. Spillet skal være rent tekstbaseret og benytter sig af betinget udførelse (if statements) og tilfældige tal (random numbers).

[[https://classroom.github.com/a/ol5aRD7M]]

Skabelon til censor:
[[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_Opgave_04_Flugten_paa_Dune.git]]
*** Opgave 03 Tegn med funktioner
Her er linket til jeres tredje opgave. I denne opgave skal I omskrive jeres tidligere opgave, så I anvender variable og funktioner til at tegne jeres billeder.

[[https://classroom.github.com/a/uem17Egi]]

Skabelon til censor:
[[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade-Opgave-03-Tegn-med-funktioner.git]]
*** Opgave 02 Tegn et billede
Her er linket til jeres anden opgave. I denne opgave skal I anvende biblioteket =arcade= til at tegne billeder vha geometriske figurer. Det er en øvelse i at kalde funktioner i python.

[[https://classroom.github.com/a/-LD3l093]]

Skabelon til censor:
[[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_Opgave_02_Tegn_et_billede.git]]
*** Opgave 01 Printfunktionen
Her er linket til jeres første opgave, som har noget med pythonkode at gøre.

[[https://classroom.github.com/a/_g8EyUgY]]

Sørg for at klone jeres tildelte repo ned på jeres lokale maskine.

Skabelon til censor:
[[https://github.com/Vibenshus-Gymnasium-Programmering/Arcade_Opgave_01_Foerste_program.git]]
** Logbog
Opret jeres logbog ved at følge linket her: [[https://classroom.github.com/a/slPR9059]]

Sørg for at føre logbog hver uge. Der bliver holdt øje med jer. :)

* UVB
** Python og pycharm
I undervisningen er der anvendt ~python 3~, som programmeringssprog og ~pycharm~ er blevet introduceret som IDE. Det har været frit for eleverne at vælge en anden editor, hvis de har ønsket det. Underviseren har selv anvendt ~emacs~.

** Git 
- Installation af git 
- Introduktion til brug af git i ~bash~ (kommandolinjen) på lokal maskine.
- Introduktion til github og github classroom.
- Introduktion til [[https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow][Git Feature Branch workflow]], når man arbejder selvstændigt.
- Introduktion til [[https://docs.github.com/en/get-started/quickstart/github-flow][github flow]], når man arbejder sammen med andre.
- Der er blevet leget med de tutorials, som ligger på [[https://learngitbranching.js.org/]].
- Eleverne er blevet opfordret til at føre deres *logbog* i et git-repo på github classroom, hvor man f.eks. kan skrive sin tekst i enten ~markdown~- eller ~org mode~-syntaks.
  
** Grundlæggende programmering med ~python arcade~
Til introduktion til de basale elementer i programmering er bibliotektet ~arcade~ ([[https://api.arcade.academy/en/latest/]]) anvendt. ~arcade~ er blevet installeret gennem anvendelse af virtuelle miljøer og ~pip~.

Ved basale elementer menes der:
- variable
- (simple) datatyper
- funktioner
- Betinget udførsel (if-statements)
- Løkker

Yderligere er OOP også introduceret vha ~arcade~-biblioteket.

Meget af undervisningen er blevet inspireret af indholdet i *onlinebogen* [[https://learn.arcade.academy/en/latest/][Arcade Academy - Learn Python]]. Kapitlerne/undersiderne kan dog godt ændre sig med tiden, så derfor er der udviklet/oversat undervisningspræsentationer på dansk med tilsvarende indhold. Disse præsentationer kan findes her på siden under fanen Præsentationer og afsnittet Arcade. Præsentationerne er skrevet i ~orgmode~ med indlejret ~python~-kode, og er lagt op på github. Med den rette opsætning af emacs kan pythonkoden i præsentationerne køres interaktivt i emacs, mens eleverne kan følge med i præsentationen på github og selv nemt kan kopiere kodestumperne ind i deres IDE.

Præsentationerne har været opbygget med en del småopgaver, som nemt kunne kopieres ind i pycharm eller lignende og løses simpelt. Derudover har der dog også været en række "større" opgaver, som eleverne har tilgået gennem ~github classroom~. Hver elev har derfor fået sit eget gitrepo til hver af disse opgaver, som kun de og underviseren har adgang til. Eleverne har så "afleveret" dagens arbejde med at ~pushe~ deres sidste ændringer. På den måde har det været muligt løbende at holde øje progressionen. Selve opgaverne kan også findes her på siden under fanen Opgaver og afsnittet Arcade.

** Udvikling af GUIs med ~pyside6~
Til udvikling af grafiske brugerflader er der blevet anvendt biblioteket ~Qt for python~, som i folkemunde blot hedder ~pyside6~ i nuværende version. 

Man kan både udvikle de grafiske brugerflader "i hånden" (skrive koden direkte) eller man kan designe brugerflader i programmet ~Designer~. Begge dele er blevet introduceret.

Udvikling af grafiske brugerflader skal gerne dække følgende punkt i kernestoffet:
- arkitekturen for programmers interaktion med omgivelserne med henblik på hændelsesstyret interaktion og interaktion mellem systemer.

Præsentationer og opgaver omhandlende udviklingen af grafiske brugerflader kan findes i de respektive faner her på siden.
** Kryptografi
** Robotstyring - Lego Mindstorms
** Machine Learning
* Om
Dette er en simpel hjemmeside knyttet til programmering B på Vibenshus Gymnasium for skoleårene 2022-2024.

Faktisk er der blot tale om en simpel org-mode-fil, som er eksporteret til html og css vha. [[https://github.com/fniessen/org-html-themes]].
